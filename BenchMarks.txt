Bench marks fib(40);

102334155
534252ms

8 mins
 
470934 = 7.8 mins

297628 = 4.96046667 mins (with less indirection in InstructionPointer.)

224990 = 3.74983333mins (with even less indirection in InstructionPointer).

174974 = 2.91623333mins change to stack from obj

147892 = 2.46486667 moving things to the stack (e.g add,false,subtract).

120396 = 2.0066  changing lots of experimentation...

84547  = 1.4 mins changing record alignment in compiler to 4

66203  = 1.10338333. Basically making everything in a record public for opcodes and stack.
                     this will allow you to saw your fingers off though (i.e. accessing items beyond limits for example).   
                     Changed the instruction pointer loop. 



var a = 0;


while (a < 10) { print a; a = a + 1;}


var b = 0;

if (b == 10) { print b;}
else
{print b + 30;}





fun fib(n) {
  if (n < 2) return n;
  return fib(n - 2) + fib(n - 1);
}


print fib(30);




