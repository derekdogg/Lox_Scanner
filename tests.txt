Notes - where we eval using == for boolean we are currently expecting 1 (for true) or -1 (for false). This kind of sucks and will need fixing up at some point.
I personally would just prefer 'false' and 'true'


(5 - (3 - 1)) + --1     == 4  revert negation
(5 - (3 - 1)) + -1      == 2  true negation
(5 - (3 - 1)) + ---1    == 2  //weird negation, but hey seems to work.
((5 - (3 - 1)) + -1) /((5 - (3 - 1)) + -1) == 1 (e.g. 2/2 = 1)
((5 - (3 - 1)) + -1) /((5 - (3 - 1)) + -1) * 10 == 10
(((5 - (3 - 1)) + -1) + ((5 - (3 - 1)) + -1)) / (((5 - (3 - 1)) + -1) + ((5 - (3 - 1)) + -1)) == 1 (i.e. (2+2) / (2+2)
25+-1                   == 24
25--26 == 51
-1 + 00.4 ==  -0.6
(((5) -( (3 - 1))) + (((((-1)))))) == 2   e.g. weird bracketing.
(((5 - (3 - 1)) + -1) != 2)    == -1  //we know the 1st part is equal to 2, therefore it should be false

(10 > 5) ==  1
(10 < 5) == -1




 
